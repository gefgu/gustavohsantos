---
const { pathname } = Astro.url;

const navigation = [
  { name: "Home", href: "/" },
  { name: "Projects", href: "/projects" },
  { name: "Publications", href: "/publications" },
  { name: "In the News", href: "/news" },
  { name: "Blog & Adventures", href: "/blog" },
];

function isActive(href: string) {
  if (href === "/") {
    return pathname === "/";
  }
  return pathname.startsWith(href);
}
---

<div
  class="navbar bg-base-100 shadow-sm sticky top-0 z-50 border-b border-base-300"
>
  <div class="navbar-start">
    <div class="dropdown lg:hidden">
      <div tabindex="0" role="button" class="btn btn-ghost">
        <svg
          class="w-5 h-5"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </div>
      <ul
        tabindex="0"
        class="menu menu-sm dropdown-content mt-3 z-[1] p-2 shadow-lg bg-base-100 rounded-box w-52 border border-base-200"
      >
        {
          navigation.map((item) => (
            <li>
              <a
                href={item.href}
                class={`${isActive(item.href) ? "active text-primary font-medium" : ""}`}
              >
                {item.name}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
    <a href="/" class="btn btn-ghost text-xl font-bold text-primary">
      Gustavo H. Santos
    </a>
  </div>

  <div class="navbar-center hidden lg:flex">
    <ul class="menu menu-horizontal px-1 gap-1">
      {
        navigation.map((item) => (
          <li>
            <a
              href={item.href}
              class={`btn btn-ghost ${isActive(item.href) ? "btn-primary text-primary" : ""}`}
            >
              {item.name}
            </a>
          </li>
        ))
      }
    </ul>
  </div>

  <div class="navbar-end">
    <button id="theme-toggle" class="btn btn-ghost btn-circle">
      <svg class="w-5 h-5 dark:hidden" fill="currentColor" viewBox="0 0 20 20">
        <path
          d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
        ></path>
      </svg>
      <svg
        class="w-5 h-5 hidden dark:block"
        fill="currentColor"
        viewBox="0 0 20 20"
      >
        <path
          fill-rule="evenodd"
          d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
          clip-rule="evenodd"></path>
      </svg>
    </button>
  </div>
</div>

<style>
  .nav {
    background: var(--color-background);
    border-bottom: 1px solid var(--color-border);
    position: sticky;
    top: 0;
    z-index: 100;
    backdrop-filter: blur(8px);
    background-color: rgba(255, 255, 255, 0.9);
  }

  .nav-content {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1rem 0;
  }

  .nav-brand {
    text-decoration: none;
    color: var(--color-text);
  }

  .nav-brand-text {
    font-size: 1.25rem;
    font-weight: 600;
  }

  .nav-links {
    display: flex;
    gap: 2rem;
  }

  .nav-link {
    text-decoration: none;
    color: var(--color-text-light);
    font-weight: 500;
    transition: color 0.2s;
    position: relative;
  }

  .nav-link:hover,
  .nav-link.active {
    color: var(--color-primary);
  }

  .nav-link.active::after {
    content: "";
    position: absolute;
    bottom: -0.5rem;
    left: 0;
    right: 0;
    height: 2px;
    background-color: var(--color-primary);
    border-radius: 1px;
  }

  .mobile-menu-btn {
    display: flex;
    flex-direction: column;
    gap: 4px;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
  }

  .hamburger {
    width: 24px;
    height: 2px;
    background-color: var(--color-text);
    transition: all 0.3s;
  }

  .mobile-menu-btn.active .hamburger:nth-child(1) {
    transform: rotate(45deg) translate(5px, 5px);
  }

  .mobile-menu-btn.active .hamburger:nth-child(2) {
    opacity: 0;
  }

  .mobile-menu-btn.active .hamburger:nth-child(3) {
    transform: rotate(-45deg) translate(7px, -6px);
  }

  .mobile-nav {
    display: none;
    flex-direction: column;
    padding: 1rem 0;
    border-top: 1px solid var(--color-border);
  }

  .mobile-nav.active {
    display: flex;
  }

  .mobile-nav-link {
    text-decoration: none;
    color: var(--color-text-light);
    font-weight: 500;
    padding: 0.75rem 0;
    transition: color 0.2s;
  }

  .mobile-nav-link:hover,
  .mobile-nav-link.active {
    color: var(--color-primary);
  }

  .desktop-only {
    display: block;
  }

  .mobile-only {
    display: none;
  }

  @media (max-width: 768px) {
    .desktop-only {
      display: none;
    }

    .mobile-only {
      display: block;
    }

    .mobile-menu-btn {
      display: flex;
    }
  }
</style>

<script>
  // Mobile menu toggle
  const mobileMenuBtn = document.getElementById("mobile-menu-btn");
  const mobileNav = document.getElementById("mobile-nav");

  if (mobileMenuBtn && mobileNav) {
    mobileMenuBtn.addEventListener("click", () => {
      mobileMenuBtn.classList.toggle("active");
      mobileNav.classList.toggle("active");
    });

    // Close mobile menu when clicking on a link
    const mobileNavLinks = mobileNav.querySelectorAll(".mobile-nav-link");
    mobileNavLinks.forEach((link) => {
      link.addEventListener("click", () => {
        mobileMenuBtn.classList.remove("active");
        mobileNav.classList.remove("active");
      });
    });
  }
</script>
