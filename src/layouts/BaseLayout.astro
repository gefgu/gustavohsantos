---
export interface Props {
  title: string;
  description?: string;
  image?: string;
}

const {
  title,
  description = "Gustavo H. Santos - Research Scientist and AI Engineer",
  image = "/images/profile.jpg",
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<!doctype html>
<html lang="en" data-theme="light">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- <link rel="icon" type="image/svg+xml" href="/favicon.svg" /> -->
    <link rel="icon" type="image/svg+xml" href="/images/profile.jpeg" />
    <meta name="generator" content={Astro.generator} />

    <!-- SEO -->
    <title>{title}</title>
    <link rel="canonical" href={canonicalURL} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:image" content={new URL(image, Astro.site)} />
    <meta property="og:type" content="website" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={new URL(image, Astro.site)} />

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />

    <!-- Theme Toggle Script -->
    <script is:inline>
      // Theme toggle functionality
      function getTheme() {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          return "dark";
        }
        return "light";
      }

      function setTheme(theme) {
        localStorage.setItem("theme", theme);
        document.documentElement.setAttribute("data-theme", theme);
      }

      // Set initial theme
      setTheme(getTheme());

      // Listen for theme changes
      window.addEventListener("DOMContentLoaded", () => {
        const themeToggle = document.getElementById("theme-toggle");
        if (themeToggle) {
          themeToggle.addEventListener("click", () => {
            const currentTheme = getTheme();
            const newTheme = currentTheme === "light" ? "dark" : "light";
            setTheme(newTheme);
          });
        }
      });
    </script>
  </head>

  <body class="font-sans">
    <slot />
  </body>
</html>
